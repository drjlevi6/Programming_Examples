%!PS-Adobe-3.0%%Title: (arabcombined.ps)%%Creator: (Jonathan Levi M.D.)%%Pages: 4%%BoundingBox: 72 72 540 720%%CreationDate: 2002/08/30%%DocumentData: Clean7Bit%%LanguageLevel: 2%%DocumentNeededResources: font Times-Roman Times-Bold%%+ font Times-Italic Times-BoldItalic%%EndComments%%BeginProlog%%EndProlog%%BeginSetup% Basic Definitions:/bd {bind def} def/inch {72 mul} bd/pagewidth {8.5 inch} bd/pageheight{11 inch} bd%%EndSetup%%Page: 1 1%%BeginPageSetupsave/c_show {							% y str c_show; draw str, centered horizontally	dup stringwidth pop -0.5 mul	% y str -1/2 x stringÕs width	pagewidth 2 div add				% y str x	3 -1 roll moveto show}def%%EndPageSetup/Times-Bold findfont 24 scalefont setfont6.2 inch (Arab Geometric Patterns) c_show/Times-Bold findfont 14 scalefont setfont417 (Jonathan Levi, M.D.) c_show/Times-Italic findfont 12 scalefont setfont381 (Based on Patterns from J. Bourgoin\047s) c_show369 (\252Arab Geometrical Pattern & Design\272) c_showshowpagerestore%%PageTrailer%%Page: 2 2%%BeginPageSetupsave% Basic Definitions:/bd {bind def} bind def/inch {72 mul} bd/sqrt3 {3 sqrt} bd/pageheight {11 inch} bd/pagewidth {8.5 inch} bd/topm {pageheight 1 inch sub} bd/botm {1 inch} bd/leftm{1 inch} bd/rightm{pagewidth 1 inch sub} bd/d {pagewidth 2 inch sub 3 div} bd	% horiz/vert. distance between hex patterns/r {sqrt3 sqrt3 1 add div d mul} bd	% length of hexagonal patternsÕ edges/p1 {r 0} bd/p2 {r .5 mul r .5 mul sqrt3 mul} bd/p3 {r .5 mul r .5 mul sqrt3 div} bd/p4 {r .5 mul 3 div r .5 mul sqrt3 div 3 div} bd/p5 {r .5 mul 1.5 div r .5 mul sqrt3 div 1.5 div} bd/squarevertex {0.205 r mul} bd	% (empiric) distance from square center to vertex/blackrgb [0 0 0] def/whitergb [1 1 1] def% Adjustable Parameters:/labelfontsize 7 def/offwhitergb [1 1 0.9] def/outlinergb [0.5 0.0 0.0] def		% color for outlining shapes/lighthexrgb [0.8 0.4 0] def/darkhexrgb [0.4 0 0] def/trianglergb [0.2 0 0] def/squarergb [1 1 0] def/framelinewidth 4 def				% width of square ÒframeÓ./outlinewidth 2 def					% width of outlines around polygons% Procedures:/dosquare{	% draw, fill a square between the hexagonal patterns,			% inclined +/-60 degrees.			% Usage: x y anglesign docentersquare	gsave	3 1 roll translate	60 mul rotate	squarergb aload pop setrgbcolor	squarevertex 0 moveto	3{ 90 rotate squarevertex 0 lineto } repeat	fill	outlinergb aload pop setrgbcolor	squarevertex 0 moveto	outlinewidth setlinewidth	3{ 90 rotate squarevertex 0 lineto } repeat	closepath stroke	grestore}def/dosmallhexagon{	% draw, fill one of the patternÕs seven small hexagons:					% x y fillrgb drawsmallhexagon	gsave	3 1 roll translate	gsave	aload pop setrgbcolor	p4 moveto	5{ 60 rotate p4 lineto }repeat	fill	grestore	outlinergb aload pop setrgbcolor	p4 moveto	outlinewidth setlinewidth	5{ 60 rotate p4 lineto }repeat	closepath stroke	grestore}def/dohexpattern{		% draw one hexagonal pattern centered at (x, y) and					% rotated theta degrees, with center hexagon filled					% lighthexrgb, surrounding 6 hexagons filled sixhexfill					% x y theta sixhexfill dohexpattern	/sixhexfill exch def	gsave	3 1 roll translate rotate	0 dotriangle	120 dotriangle	180 dotriangle	300 dotriangle	0 0 lighthexrgb dosmallhexagon	6{ p5 sixhexfill dosmallhexagon 60 rotate }repeat	grestore}def/dotriangle{		% draw one triangle at edge of hexagonal pattern					% Usage: theta drawtriangle	gsave rotate	trianglergb aload pop setrgbcolor	p1 moveto p2 lineto p3 lineto fill	outlinergb aload pop setrgbcolor	outlinewidth setlinewidth	p1 moveto p2 lineto p3 lineto closepath stroke	grestore}def/labelpoint {		% draw a point and a label for it: for debugging					% Usage: x y labelstring drawpoint	gsave	blackrgb aload pop setrgbcolor	2 index 2 index moveto	2 index 2 index 2 0 360 arc fill				% draw the point	3 1 roll moveto									% draw its label	3 labelfontsize -0.5 mul rmoveto show	grestore} def% MAIN PROGRAM%/Times findfont labelfontsize scalefont setfont	% for point labels% paint off-white background.offwhitergb aload pop setrgbcolor0 0 movetopagewidth 0 rlineto0 pageheight rlinetopagewidth neg 0 rlinetoclosepath fillwhitergb aload pop setrgbcolorgsavepagewidth 2 div pageheight 2 div translate% do hexagonal patternsgsave4{	d 2 div d 2 div 90 lighthexrgb dohexpattern	d 1.5 mul d 1.5 mul 90 darkhexrgb dohexpattern	d 1.5 mul d .5 mul 0 darkhexrgb dohexpattern	d .5 mul d 1.5 mul 0 darkhexrgb dohexpattern	90 rotate}repeatgrestore% do squares between hex patterns0 0 1 dosquaregsave4{	d 0 -1 dosquare	d d 1 dosquare	90 rotate}repeatgrestore%0 0 (O) labelpoint%p1 (p1) labelpoint% Attempts to use a clipping rectangle were unsuccessful, so% we fill and draw the margins:whitergb aload pop setrgbcolorpagewidth -.5 mul d -1.5 mul movetopagewidth 0 rlineto0 pageheight neg rlinetopagewidth neg 0 rlinetofilld -1.5 mul pageheight -.5 mul movetopagewidth neg 0 rlineto0 pageheight rlinetopagewidth 0 rlinetofillpagewidth -.5 mul d 1.5 mul movetopagewidth 0 rlineto0 pageheight rlinetopagewidth neg 0 rlinetofilld 1.5 mul pageheight .5 mul movetopagewidth 0 rlineto0 pageheight neg rlinetopagewidth neg 0 rlinetofill% Draw square framegsaveframelinewidth setlinewidthblackrgb aload pop setrgbcolor%d -1.5 mul framelinewidth 2 div 1 add sub%d -1.5 mul framelinewidth 2 div sub 1 add moveto%d 3 mul framelinewidth  add 2 sub 0 rlineto%0 d 3 mul framelinewidth  add 2 sub rlineto%d 3 mul framelinewidth  add 2 sub neg 0 rlinetod -1.5 mul d -1.5 mul movetod 3 mul 0 rlineto0 d 3 mul rlinetod -3 mul 0 rlinetoclosepath strokegrestoregrestore		% Restore origin to lower left% Do legend/Times-Roman findfont 12 scalefont setfontblackrgb aload pop setrgbcolorleftm botm moveto%currentpoint pstack clear(J. Bourgoin,) show/Times-Italic findfont 12 scalefont setfont( Arabic Geometrical Pattern & Design, ) show/Times-Roman findfont 12 scalefont setfont(Plate IX[d]) showrightm botm moveto(J. Levi 6/2002)dup stringwidth pop neg 0 rmoveto showshowpagerestore%%Page: 3 3%%BeginPageSetup% Basic Definitions:save/bd {bind def} def/inch {72 mul} bd/pagewidth {8.5 inch} bd/pageheight{11 inch} bd/tmargin{.5 inch}bd			% max limits for drawing (actual space/bmargin{1.5 inch}bd		% occupied by drawing may be less)/lmargin{.5 inch}bd/rmargin{.5 inch}bd/cos36 {36 cos} bd/sin36 {36 sin} bd/tan36 {sin36 cos36 div} bd/cos72 {72 cos} bd/sin72 {72 sin} bd/tan72 {sin72 cos72 div} bd/r {48} bd					% radius of circle bounding "outward-facing" tzoids/d {r tan72 mul}bd/rdoub {r 2 mul}bd/ddoub {d 2 mul}bd/nx {pagewidth lmargin sub rmargin sub rdoub div floor}bd/ny {pageheight tmargin sub bmargin sub ddoub div floor}bd/drawwidth {nx rdoub mul} bd/drawheight{ny ddoub mul} bd/draw_lmargin {pagewidth drawwidth sub 2 div} bd/draw_bmargin {pageheight drawheight sub 2 div} bd% Colors:/outlinergb {.8 .4 .2} bd	% mahogany-ish/fillrgb1 {.4 .6 1} bd		% circle of trapezoids, equ triangles/fillrgb2 {.6 0 0} bd		% most of the other shapes/fillrgb3 {0 .6 .6} bd/fillrgb4 {.6 .4 0} bd/blackrgb {0 0 0} bd/whitergb {1 1 1}bd/redrgb {1 0 0} bd% Points and lines:/L1{		% (y - 0) = -tan36(x - r)	neg r add tan36 mul}def% p1 - p4: vertices of circle of "outward-facing" trapezoids/p1{r 0}bd/p2{	gsave	0 0 L1 moveto	72 rotate	currentpoint	grestore}bd/p3prime{	% L1(x)/x = tan 36,			% -tan36(x - r)/x = tan 36 => x = r/2	r 2 div dup L1}bd/p3{	gsave	p3prime moveto	36 rotate	currentpoint	grestore}bd/p4{p2 neg}bd% p5 - p7: vertices of outer, interrupted circle of "inward-facing" trapezoids:/p5{	p2 exch neg	r 2 mul add	exch}bd/p6{	p3 exch neg	r 2 mul add	exch}bd/p7{p5 neg}bd% p8, p9: remaining vertices of circle of pentagons/p8{	gsave	p1 moveto	-36 rotate	currentpoint	grestore}bd/p9{	gsave	p7 moveto	-36 rotate	currentpoint	grestore}bd% p10-11: (remaining) points of outer "semi-rhombi"/p10{	gsave	p9 exch 2 mul p8 pop sub exch moveto	36 rotate	currentpoint	grestore}bd/p11{		% vectorially, 2 x p5 - p1	p5 2 mul exch 2 mul	exch	% 2 x p5	p1							% 2 p5x 2 p5y p1x p1y	exch						% 2 p5x 2 p5y p1y p1x	4 1 roll					% p1x 2 p5x 2 p5y p1y	sub							% p1x 2 p5x (2 p5y - p1y)	3 1 roll					% (2 p5y - p1y) p1x 2 p5x	exch sub					% (2 p5y - p1y) (2 p5x - p1x)	exch}bd% p12-13: remaining points of small rhombi inside of trapezoids/p12{	gsave	p3 moveto	-36 rotate	currentpoint	grestore}bd/p13{				% vectorially, p12 + p3 - p2	p12 exch		% p12y p12x	p3				% p12y p12x p3x p3y	4 1 roll		% p3y p12y p12x p3x	add				% p3y p12y (p12x + p3x)	3 1 roll add	% (p12x + p3x) (p12y + p3y)	exch p2			% (p12y + p3y) (p12x + p3x) p2x p2y	4 1 roll sub	% p2y (p12y + p3y) (p12x + p3x - p2x)	3 1 roll		% (p12x + p3x - p2x) p2y (p12y + p3y)	exch sub}bd% p14-p16: remaining points of rectangles next to inner pentagons/p14{	p13 exch pop dup	% p13y p13y	tan36 div exch}bd/p15{p14 neg}bd/p16{p13 neg}bd/p17{		% point for rhombi connecting trapezoids to inner pentagons	gsave	p13 moveto	-36 rotate	currentpoint	grestore}bd/rotationIncrements {[72 36 144 36]} bd % outer t'zoids, rhombi/numIncrements{rotationIncrements length 1 sub}bd/drawpattern {	% draw a single pattern centered on (x, y).				% Usave: x y drawpattern	gsave	translate	gsave		% draw central pentagon	p14 moveto	4{72 rotate p14 lineto}repeat	closepath blackrgb fillstroke	grestore	5{% (can omit drawing rectangles as long as they're white)%		p13 moveto		% draw rectangles surrounding inner pentagon%		p14 lineto%		p15 lineto%		p16 lineto%		closepath whitergb fillstroke		p3 moveto		% draw triangles between trapezoids & rectangles		p13 lineto		p16 lineto		closepath fillrgb4 fillstroke		p12 moveto		% draw rhombi connecting trapezoids & pentagon		p17 lineto		p14 lineto		p13 lineto		closepath fillrgb4 fillstroke		72 rotate	}repeat		10{% (can omit drawing trapezoids as long as they're white)%		p1 moveto	% inner circle of outward-facing t'zoids%		p2 lineto%		p3 lineto%		p4 lineto%		closepath whitergb fillstroke		p1 moveto	% circle of pentagons		p2 lineto		p8 lineto		p9 lineto		p5 lineto		closepath fillrgb2 fillstroke		p2 moveto	% small rhombi inside of & adjacent to t'zoids		p12 lineto		p13 lineto		p3 lineto		closepath fillrgb3 fillstroke		36 rotate	}repeat	gsave	0 1 numIncrements{		rotationIncrements exch get rotate		p1 moveto	% outer, interrupted circle of inward-facing trapezoids		p5 lineto		p6 lineto		p7 lineto		closepath fillrgb3 fillstroke		% draw, fill large outer semirhombi		gsave		p11 moveto		p5 lineto		p6 lineto		p7 lineto		p10 lineto		fillrgb3 setrgbcolor fill		outlinergb setrgbcolor		p11 moveto		p5 lineto		p6 lineto		p7 lineto		p10 lineto stroke		grestore	}for	grestore	grestore}def/fillstroke{	% fill then outline a closed path that has already been				% created. Outline color is given by /outlinergb; fill color				% must be supplied.				% Usage: fillrgb fillstroke	/savedrgb {currentrgbcolor} bd	gsave	setrgbcolor	fill	grestore	outlinergb setrgbcolor	stroke	savedrgb setrgbcolor}def/drawlegend{	/Times-Roman findfont 12 scalefont setfont	1 inch 1 inch moveto	(J. Bourgoin,) show	/Times-Italic findfont 12 scalefont setfont	( Arab Geometrical Pattern & Design, ) show	/Times-Roman findfont 12 scalefont setfont	(Plate VII[a]) show	pagewidth 1 inch sub 1 inch moveto	(J. Levi 8/2002) dup stringwidth pop neg 0 rmoveto show}def/erasemargins{		% erase unwanted portions; also, draw frame	gsave	1 setgray	0 0 moveto	0 pageheight rlineto	pagewidth 0 rlineto	0 pageheight neg rlineto	closepath	draw_lmargin draw_bmargin moveto	drawwidth 0 rlineto	0 drawheight rlineto	drawwidth neg 0 rlineto	closepath eofill	5 setlinewidth	fillrgb3 setrgbcolor	draw_lmargin draw_bmargin moveto	drawwidth 0 rlineto	0 drawheight rlineto	drawwidth neg 0 rlineto	closepath stroke	grestore}def%%EndPageSetup% MAIN PROGRAM2 setlinewidth0 1 ny{		% Draw as many repeating patterns as will fit on page	/i exch def	0 1 nx{		/j exch def		rdoub j mul draw_lmargin add		ddoub i mul draw_bmargin add		drawpattern	}for	i ny lt{		0 1 nx 1 sub{			/j exch def			rdoub j mul draw_lmargin add r add			ddoub i mul draw_bmargin add d add			drawpattern		}for	}if}forerasemarginsdrawlegendshowpagerestore%%Page: 4 4%%BeginPageSetupsave% Basic Definitions:/bd {bind def} def/inch {72 mul} bd/pagewidth {8.5 inch} bd/pageheight{11 inch} bd/tmargin{.5 inch}bd		% max limits for drawing (actual space/bmargin{1.5 inch}bd	% occupied by drawing may be less)/lmargin{.5 inch}bd/rmargin{.5 inch}bd/sqrt2 {2 sqrt} bd/sqrt3 {3 sqrt} bd/r {72} bd				% radius of circle inscribed in patternÕs square/rdub {r 2 mul}bd/r2 {r 2 div} bd/nx {pagewidth lmargin sub rmargin sub rdub div floor}bd/ny {pageheight tmargin sub bmargin sub rdub div floor}bd/drawwidth {nx rdub mul} bd/drawheight{ny rdub mul} bd/draw_lmargin {pagewidth drawwidth sub 2 div} bd/draw_bmargin {pageheight drawheight sub 2 div} bd/cos15 {15 cos} bd/sin15 {15 sin} bd/tan15 {sin15 cos15 div} bd/tan165 {tan15 neg} bd/cos30 {sqrt3 2 div} bd/sin30 {.5} bd/t {tan15 r2 mul 1 tan15 sub div} bd/u {tan15 r2 mul 1 tan15 add div} bd/v {r2 u 2 mul sub} bd/p1 {r2 0} bd			% pt at intersection of two trapezoids/p2 {r r2} bd/p3 {r r2 neg} bd/p4 {r2 t add t} bd	% intersection of trapezoid & its triangle/p5 {cos30 r2 mul		% pt at intersection of two trapezoids	sin30 r2 mul}bd/p6 {r2 u sub u} bd	% trapezoidÕs inner point/rdod {t r 2.5 mul add tan15 mul t add}bd		% dist from origin to												% vertex of dodecagon/p7 {rdod 0}bd									% 1st dodecagon point/p8 {rdod cos30 mul rdod sin30 mul}bd			% 2nd dodecagon point/p9x{r2 tan15 mul rdod add tan15 1 add div}bd/p9y{p9x r2 sub}bd/p9 {p9x p9y}bd			% 1st pt., small triangle based on dodecagon/p10{					% 2nd point	gsave	p9 moveto	30 rotate	1 -1 scale	currentpoint	grestore}bd/p11{					% 2nd point rotated 30 degres counterclockwise	gsave	p10 moveto	-30 rotate	currentpoint	grestore}bd/p12{r r2 neg t add tan15 mul t add}bd/p13{		% p13 - p15:points on pentagons extending from dodecagon			% toward corner of pattern	gsave	p9 moveto	-30 rotate	currentpoint	grestore}bd/p14{	gsave	p2 moveto	-30 rotate	currentpoint	grestore}bd/p14x{p14 pop} bd			% use p14Õs coords to compute/p14y{p14 exch pop}bd		% 5th point of pentagon/L_5gon{	neg p14x add tan15 mul p14y add}def% p15 is at intersection of L_5gon with diagonal:/p15{	tan15 p14x mul p14y add	1 tan15 add div	dup}bd/p16{r r L_5gon}bd	% end of line L_5gon at patternÕs right edge:/p17{	r r L_5gon add	p15 pop sub	dup}bd/p18{r p17 pop}bd 	% projection of p17 on rt edge of pattern/p19{	v 0}bd		% inner pt of square inside trapezoids/p20{v cos30 mul	% p20-p23: squares surrounding inner hexagon		v sin30 mul}bd/p21{v sin30 mul		v cos30 mul}bd/p22{1 cos30 sub v mul	sin30 v mul}bd/p23{p22 exch}bd	/L_Neg15{	neg r2 add t add tan15 mul t add}def/outlinergb {.8 .4 .2} bd		% mahogany-ish/fillrgb1 {.4 .6 1} bd			% circle of trapezoids, equ triangles/fillrgb2 {.4 1 0} bd			% most of the other shapes/fillrgb3 {0 .6 .6} bd/fillrgb4 { .4 .85 0} bd		% hexagons between the trapezoids/whitergb {1 1 1}bd/redrgb {1 0 0} bd/drawpattern {	% draw a single pattern centered on origin	gsave	4{		fillrgb2 setrgbcolor		p2 moveto p1 lineto p3 lineto fill		outlinergb setrgbcolor		p2 moveto p1 lineto p3 lineto stroke		fillrgb3 setrgbcolor	% draw 1/2 small sq at edge of ptrn		p12 moveto		p7 lineto		1 -1 scale		p12 lineto closepath fill		1 -1 scale		p7 moveto				% draw 1st of 2 small triangles from dodecagon		p10 lineto				% to edge of pattern		p12 lineto closepath		whitergb fillstroke		1 -1 scale				% draw 2nd of the 2 small triangles		p7 moveto		p10 lineto		p12 lineto closepath		whitergb fillstroke		1 -1 scale		p13 moveto				% draw pentagons extending out from 12-gon		p14 lineto		p15 lineto		p14 exch lineto		p13 exch lineto closepath		fillrgb2 fillstroke		redrgb setrgbcolor		% draw red star at patternÕs corner		p16 moveto		r r lineto		p16 exch lineto		p17 lineto		fill		p15 moveto				% we do need to draw these white rhombi		p16 lineto		p17 lineto		p16 exch lineto closepath		whitergb fillstroke		90 rotate	}repeat	grestore	gsave	12{		p1 moveto				% draw one of circle of trapezoids		p4 lineto		p5 lineto		p6 lineto closepath		fillrgb1 fillstroke		%p7 moveto				% draw one side of dodecagon		%p8 lineto stroke		p9 moveto				% small triangle touching trapezoid		p4 lineto		p10 lineto closepath		fillrgb1 fillstroke		p1 moveto				% draw 1 hexagon bounded by trapezoids,		p4 lineto				% small triangles and dodecagon		p10 lineto		p7 lineto		1 -1 scale		p10 lineto		p4 lineto		1 -1 scale		closepath		fillrgb4 fillstroke		gsave					% draw squares inside of traezoids		1 setlinewidth		p1 moveto		p6 lineto		p19 lineto		1 -1 scale		p6 lineto closepath		fillrgb2 fillstroke		grestore				30 rotate	}repeat	grestore	gsave	1 setlinewidth	6{		p20 moveto		p21 lineto		p22 lineto		p23 lineto		closepath fillrgb1 fillstroke		60 rotate	}repeat	grestore	gsave						% draw innermost hexagon	1 setlinewidth	p23 moveto	5{		p22 lineto		60 rotate	}repeat	closepath fillrgb3 fillstroke	60 rotate	grestore}def/fillstroke{	% fill then outline a closed path that has already				% been created. Outline color is given by				% /outlinergb; fill color must be supplied.				% Usage: fillrgb fillstroke	/savedrgb {currentrgbcolor} bd	gsave	setrgbcolor	fill	grestore	outlinergb setrgbcolor	stroke	savedrgb setrgbcolor}def/drawlegend{	/Times-Roman findfont 12 scalefont setfont	1 inch 1 inch moveto	(J. Bourgoin,) show	/Times-Italic findfont 12 scalefont setfont	( Arab Geometrical Pattern & Design, ) show	/Times-Roman findfont 12 scalefont setfont	(Plate VII[b]) show	pagewidth 1 inch sub 1 inch moveto	(J. Levi 8/2002) dup stringwidth pop neg 0 rmoveto show}def/erasemargins{	gsave	1 setgray	0 0 moveto	0 pageheight rlineto	pagewidth 0 rlineto	0 pageheight neg rlineto	closepath	draw_lmargin draw_bmargin moveto	drawwidth 0 rlineto	0 drawheight rlineto	drawwidth neg 0 rlineto	closepath eofill	grestore}def%%EndPageSetup% MAIN PROGRAM2 setlinewidth0 1 ny{			% Draw as many repeating patterns as will fit on page	/i exch def	0 1 nx{		/j exch def		gsave		rdub j mul draw_lmargin add		rdub i mul draw_bmargin add translate		drawpattern		grestore	}for}forerasemarginsdrawlegendshowpagerestore%%Page: 5 5%%BeginPageSetupsave% Basic Definitions:/tmargin{.5 inch}bd		% max limits for drawing (actual space/bmargin{1.5 inch}bd	% occupied by drawing may be less)/lmargin{.5 inch}bd/rmargin{.5 inch}bd/cos18 {18 cos} bd/sin18 {18 sin} bd/tan18 {sin18 cos18 div} bd/cos36 {36 cos} bd/sin36 {36 sin} bd/tan36 {sin36 cos36 div} bd/cos54 {54 cos} bd/sin54 {54 sin} bd/tan54 {sin54 cos54 div} bd/cos72 {72 cos} bd/sin72 {72 sin} bd/tan72 {sin72 cos72 div} bd/r {48} bd		% radius of circle bounding "outward-facing" tzoids/d {r tan72 mul}bd/ddoub {d 2 mul}bd/dhalf {d 2 div}bd/dy{d tan54 mul}bd/dyhalf{dy 2 div}bd% p0:used for computing distance between centers of patterns./p0{r sin18 mul r cos18 mul}bd/p0x{p0 pop}bd/p0y{p0 exch pop}bd/L0{	% line tangent to circle of radius r at p0		% (y - p0y) = - tan18(x - p0x); y = tan18(p0x - x) + p0y		% Usage: x L0	neg p0x add tan18 mul p0y add}def/L1{	% line used for building trapezoids, central star, etc.		% (y-0) = - tan18(x-r)	neg r add tan18 mul}def/L2{	% (y-0) = tan54(x+dhalf)	dhalf add tan54 mul}def/L3{	% y = -tan54(x-dhalf)	neg dhalf add tan54 mul}def/L4{	% y = tan18(x-r)	r sub tan18 mul}def/nx {pagewidth lmargin sub rmargin sub d div floor}bd/ny {pageheight tmargin sub bmargin sub dy div floor}bd/drawwidth {nx d mul} bd/drawheight{ny dy mul} bd/draw_lmargin {pagewidth drawwidth sub 2 div} bd/draw_bmargin {pageheight drawheight sub 2 div} bd% Colors:/outlinergb {.8 .4 .2} bd		% mahogany-ish/fillrgb1 {.4 .6 1} bd			% circle of trapezoids, equ triangles/fillrgb2 {.6 0 0} bd			% most of the other shapes/fillrgb3 {0 .6 .6} bd/fillrgb4 {.6 .4 0} bd/blackrgb {0 0 0} bd/whitergb {1 1 1}bd/redrgb {1 0 0} bd/bluergb {0 0 1}bd% Polygon points:/p1{r 0}bd		% p1, p2: circle of rhombi/p2{			% L1(x)/x = tan 18				% tan18 x = tan18(r - x)				% (tan18 + tan18)x = tan18 r				% x = r/2	r 2 div dup L1}bd/p3prime{		% L1(x)/x = tan 36				% tan36 x = tan18(r-x)				% (tan18 + tan36)x = tan18 r				% x = (r tan 18)/(tan36 + tan 18)	r tan18 mul	tan36 tan18 add div	dup L1}bd/p3{	gsave	p3prime moveto	36 rotate	currentpoint	grestore}bd	/p4{p2 neg}bd% p5-p8: remaining points on circle of hexagons next to t'zoids/p5{r cos36 mul r sin36 mul}bd/p6prime{		% abscissa is negative of actual p6's				% solve L1(x) = L2(x):				% tan54(x+dhalf) = tan18(r - x)				% (tan54 + tan18)x = r tan18 - dhalf tan 54				% x = (r tan18 - dhalf tan 54)/(tan54 + tan18)	r tan18 mul dhalf tan54 mul sub	tan54 tan18 add div	dup L2}bd/p6{p6prime exch neg exch}bd/p7{			% L3(x)/x = tan18				% tan54(dhalf-x)/x = tan18				% tan54(dhalf-x) = x tan18				% tan54 dhalf = x(tan18 + tan54)				% x = tan54 dhalf/(tan18 + tan54)	tan54 dhalf mul tan18 tan54 add div	dup L3}bd/p7x{p7 pop}bd/p8{p7x dup L4}bd/drawpattern {	% draw a single pattern centered on (x, y).				% Usage: x y drawpattern	gsave	translate	drawcentralstar	drawrhombi	drawhexagons	drawarrows	drawverticalhexagons	grestore}def/drawcentralstar{	whitergb setrgbcolor	p3 moveto	10{		p2 lineto		p3prime lineto		36 rotate	}repeat	fill}def/drawrhombi{	% draw circle of rhombi	redrgb setrgbcolor	10{		p1 moveto		p2 lineto		p3 lineto		p4 lineto fill		36 rotate	}repeat}def/drawhexagons{	bluergb setrgbcolor	10{		p2 moveto		p5 lineto		p6 lineto		p7 lineto		p8 lineto		p1 lineto		fill		36 rotate	}repeat}def/drawarrows{	% draw the two arrows pointing outward from 6gons.	gsave	redrgb setrgbcolor	2{		p1 moveto		p8 lineto		p7 lineto		dhalf 0 lineto		1 -1 scale		p7 lineto		p8 lineto		fill		1 -1 scale		180 rotate	}repeat	grestore}def/drawverticalhexagons{	gsave	bluergb setrgbcolor	dhalf 0 translate	72 rotate	2{		gsave		p2 neg exch neg exch translate		p2 moveto		p5 lineto		p6 lineto		p7 lineto		p8 lineto		p1 lineto		fill		grestore		180 rotate	}repeat	grestore}def		/fillstroke{	% fill then outline a closed path that has already				% been created. Outline color is given by				% /outlinergb; fill color must be supplied.				% Usage: fillrgb fillstroke	/savedrgb {currentrgbcolor} bd	gsave	setrgbcolor	fill	grestore	outlinergb setrgbcolor	stroke	savedrgb setrgbcolor}def/drawlegend{	/Times-Roman findfont 12 scalefont setfont	1 inch 1 inch moveto	(\252Arab-American Patriotic\272)show	1 inch 1 inch 12 sub moveto	(\(J. Bourgoin,) show	/Times-Italic findfont 12 scalefont setfont	( Arab Geometrical Pattern & Design, ) show	/Times-Roman findfont 12 scalefont setfont	(p. 171\)) show	pagewidth 1 inch sub 1 inch 12 sub moveto	(J. Levi 8/2002) dup stringwidth pop neg 0 rmoveto show}def/erasemargins{	% erase unwanted portions; also, draw frame	gsave	1 setgray	0 0 moveto	0 pageheight rlineto	pagewidth 0 rlineto	0 pageheight neg rlineto	closepath	draw_lmargin draw_bmargin moveto	drawwidth 0 rlineto	0 drawheight rlineto	drawwidth neg 0 rlineto	closepath eofill	3 setlinewidth	redrgb setrgbcolor	draw_lmargin draw_bmargin moveto	drawwidth 0 rlineto	0 drawheight rlineto	drawwidth neg 0 rlineto	closepath stroke	grestore}def%%EndPageSetup% MAIN PROGRAM0 1 ny{		% Draw as many repeating patterns as will fit on page	/i exch def	0 1 nx{		/j exch def		d j mul draw_lmargin add		dy i mul draw_bmargin add		drawpattern	}for	i ny lt{		0 1 nx{			/j exch def			d j mul draw_lmargin add dhalf sub			dy i mul draw_bmargin add dyhalf add			drawpattern		}for	}if}forerasemarginsdrawlegendshowpagerestore%%Trailer%%EOF